# -*- coding: utf-8 -*-
"""test.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19nNTAgPMOjBHVqu-q_8v0K9BTo9QtajK
"""

import pytest
from airflow.models import DagBag

@pytest.fixture()
def dagbag():
    return DagBag(dag_folder="./dags/", include_examples=False)

def test_dag_loaded(dagbag):
    dag_id = "data_collection_preprocessing_pipeline"
    dag = dagbag.get_dag(dag_id)
    assert dag is not None, f"DAG {dag_id} not found"
    assert dag.dag_id == dag_id

def test_tasks_present(dagbag):
    dag = dagbag.get_dag("data_collection_preprocessing_pipeline")
    task_ids = list(dag.task_dict.keys())
    assert "fetch_data" in task_ids
    assert "preprocess_data" in task_ids
    assert len(task_ids) == 2

def test_task_dependencies(dagbag):
    dag = dagbag.get_dag("data_collection_preprocessing_pipeline")
    fetch_data = dag.get_task("fetch_data")
    preprocess_data = dag.get_task("preprocess_data")
    downstream = fetch_data.get_direct_relatives("downstream")
    assert preprocess_data in downstream, "fetch_data should run before preprocess_data"

def test_task_types(dagbag):
    dag = dagbag.get_dag("data_collection_preprocessing_pipeline")
    from airflow.operators.bash import BashOperator
    assert isinstance(dag.get_task("fetch_data"), BashOperator)
    assert isinstance(dag.get_task("preprocess_data"), BashOperator)